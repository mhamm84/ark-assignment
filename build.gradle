plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.openapi.generator' version '6.2.1'
    id 'java'
}

group = 'com.ark'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'io.swagger.parser.v3:swagger-parser:2.1.7'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/ark-assignment-api.yaml"
    outputDir = "$buildDir/generated"
    apiPackage = "com.ark.assignment.api"
    invokerPackage = "com.ark.assignment.controller"
    modelPackage = "com.ark.assignment.models"
    configOptions = [
            dateLibrary: "java8-localdatetime",
            interfaceOnly: "true",
    ]
}

// forces generation of spring controllers on compile, adding them to the sources for compilation
processResources.dependsOn tasks.openApiGenerate
compileJava.dependsOn tasks.openApiGenerate
sourceSets.main.java.srcDir "$buildDir/generated/src/main/java"
sourceSets.main.resources.srcDir "$buildDir/generated/src/main/resources"
